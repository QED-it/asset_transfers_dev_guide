openapi: 3.0.0
info:
  version: 1.4.1
  title: QEDIT - Asset Transfers
security:
  - ApiKeyAuth: []
servers:
  - url: http://{server_url}:12052
    variables:
      server_url:
        default: localhost
paths:
  /wallet/get_balances:
    post:
      tags:
        - Wallet
      summary: Get wallets balance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWalletBalanceRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWalletBalanceResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/issue_asset:
    post:
      tags:
        - Wallet
      summary: Issue assets [async call]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueAssetRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/transfer_asset:
    post:
      tags:
        - Wallet
      summary: Transfer assets [async call]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferAssetRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/get_new_address:
    post:
      tags:
        - Wallet
      summary: Get a new address from a given diversifier or generate randomly
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNewAddressRequest'
      responses:
        '201':
          description: Success/Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNewAddressResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/get_public_key:
    post:
      tags:
        - Wallet
      summary: Get wallet public key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPublicKeyRequest'
      responses:
        '200':
          description: Success/Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPublicKeyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/create_rule:
    post:
      tags:
        - Wallet
      summary: Create & broadcast add-config-rule [async call]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRuleRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/delete_rule:
    post:
      tags:
        - Wallet
      summary: Create & broadcast delete-config-rule [async call]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRuleRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /wallet/get_activity:
    post:
      tags:
        - Wallet
      summary: Get wallet activity (transactions)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWalletActivityRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWalletActivityResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /analytics/get_network_activity:
    post:
      tags:
        - Analytics
      summary: Get details on past blocks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNetworkActivityRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkActivityResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/generate_wallet:
    post:
      tags:
        - Node
      summary: Generate a new wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateWalletRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/delete_wallet:
    post:
      tags:
        - Node
      summary: Delete a wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWalletRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/export_wallet:
    post:
      tags:
        - Node
      summary: Export wallet secret key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportWalletRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportWalletResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/import_wallet:
    post:
      tags:
        - Node
      summary: Import wallet from secret key [async call]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportWalletRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/export_auditor_access_wallet:
    post:
      tags:
        - Node
      summary: Export a viewing key that allows an auditor to view all transactions to and from a wallet. The viewing key is encrypted for the auditor identified by recipient_payment_address. The viewing key does not enable the auditor to make transactions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAuditorAccessWalletRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportAuditorAccessWalletResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/import_auditor_access_wallet:
    post:
      tags:
        - Node
      summary: Import a viewing key generated by export_auditor_access_wallet. This will create a read-only wallet which can be queried with endpoints such as get_activity and get_balances, but cannot be used to perform transactions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAuditorAccessWalletRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/unlock_wallet:
    post:
      tags:
        - Node
      summary: Unlocks a wallet for a given amount of seconds [async call]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnlockWalletRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/get_rules:
    post:
      tags:
        - Node
      summary: Get network governance rules
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRulesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/get_all_wallets:
    post:
      tags:
        - Node
      summary: Get all wallet labels
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllWalletsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/get_task_status:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTaskStatusRequest'
      tags:
        - Node
      summary: Get a specific task (by ID)
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskStatusResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /node/get_tasks:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTasksRequest'
      tags:
        - Node
      summary: Get a list of tasks by results/types
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /health:
    post:
      tags:
        - Health
      summary: Perform a healthcheck of the node and its dependent services
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthcheckResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: x-auth-token
      in: header
  schemas:
    IntPointer:
      type: integer
    GetWalletBalanceRequest:
      type: object
      properties:
        wallet_id:
          type: string
      required:
        - wallet_id
      example:
        wallet_id: source_wallet
    BalanceForAsset:
      type: object
      properties:
        asset_id:
          type: integer
        amount:
          type: integer
      required:
        - asset_id
        - amount
      example:
        wallet_id: source_wallet
    GetWalletBalanceResponse:
      type: object
      properties:
        wallet_id:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/BalanceForAsset'
      required:
        - wallet_id
        - assets
      example:
        wallet_id: source_wallet
        assets:
          - asset_id: 1
            amount: 8
    TransferAssetRequest:
      type: object
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        recipient_address:
          type: string
        amount:
          type: integer
        asset_id:
          type: integer
        memo:
          type: string
      required:
        - wallet_id
        - authorization
        - recipient_address
        - amount
        - asset_id
        - memo
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
        recipient_address: q1dxlf6vap2566t8w3z8f5j5lxy9n036zfsaytjve7fedsw6w8c9q9ctrwfz6ryyjwkgvj6tjg70f
        amount: 4
        asset_id: 1
        memo: '{"recipient_name": "Dan"}'
    GetWalletActivityRequest:
      type: object
      properties:
        wallet_id:
          type: string
        start_index:
          type: integer
        number_of_results:
          type: integer
      required:
        - wallet_id
        - start_index
        - number_of_results
      example:
        wallet_id: source_wallet
        start_index: 0
        number_of_results: 10
    TransactionsForWallet:
      type: object
      properties:
        is_incoming:
          type: boolean
        asset_id:
          type: integer
        amount:
          type: integer
        recipient_address:
          type: string
        memo:
          type: string
        id:
          type: string
      required:
        - is_incoming
        - asset_id
        - amount
        - recipient_address
        - memo
        - id
    GetRulesResponse:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
    GetAllWalletsResponse:
      type: object
      properties:
        wallet_ids:
          type: array
          items:
            type: string
      example:
        wallet_ids:
          - Jane
          - John
          - Marty
    GetTaskStatusRequest:
      type: object
      properties:
        id:
          type: string
      required:
        - id
      example:
        id: "5aaa4045-e949-4c44-a7ef-25fb55a1afa6"
    GetTasksRequest:
      type: object
      properties:
        start_index:
          type: integer
        number_of_results:
          type: integer
        types:
          type: array
          items:
            type: string
            enum:
              - unlock_wallet
              - transfer_asset
              - issue_asset
              - alter_rule
        results:
          type: array
          items:
            type: string
            default: in_progress
            enum:
              - pending
              - failure
              - in_progress
              - success
        order:
          type: string
          default: desc
          pattern: '^(asc|desc)$'
      required:
        - start_index
        - number_of_results
      example:
        start_index: 0
        number_of_results: 10
        types: ["unlock_wallet", "transfer_asset"]
        results: ["in_progress", "failure"]
        order: "asc"
    GetTaskStatusResponse:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
          format: date
        updated_at:
          type: string
          format: date
        result:
          type: string
        tx_hash:
          type: string
        qedit_tx_hash:
          type: string
        type:
          type: string
        data:
          type: object
        error:
          type: string
      example:
        id: "5aaa4045-e949-4c44-a7ef-25fb55a1afa6"
        created_at: "2019-03-12T16:40:22"
        updated_at: "2019-03-12T16:41:17"
        result: "success"
        tx_hash: "0xd379aa4e5e40552910c8ae456c65dcf51e9779fc9281ac2dc9e677ec810af6b1"
        type: "transfer_asset"
        data: {}
    GetTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/GetTaskStatusResponse'
    GetNetworkActivityRequest:
      type: object
      properties:
        start_index:
          type: integer
        number_of_results:
          type: integer
      required:
        - start_index
        - number_of_results
      example:
        start_index: 0
        number_of_results: 10
    GetNetworkActivityResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticTransaction'
    IssueAssetRequest:
      type: object
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        recipient_address:
          type: string
        amount:
          type: integer
        asset_id:
          type: integer
        confidential:
          type: boolean
        memo:
          type: string
      required:
        - wallet_id
        - authorization
        - recipient_address
        - amount
        - confidential
        - asset_id
        - memo
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
        recipient_address: q1dxlf6vap2566t8w3z8f5j5lxy9n036zfsaytjve7fedsw6w8c9q9ctrwfz6ryyjwkgvj6tjg70f
        amount: 4
        asset_id: 1
        confidential: false
        memo: '{"recipient_name": "Dan"}'
    GetNewAddressRequest:
      type: object
      properties:
        wallet_id:
          type: string
        diversifier:
          type: string
      required:
        - wallet_id
      example:
        wallet_id: source_wallet
    GetNewAddressResponse:
      type: object
      properties:
        wallet_id:
          type: string
        recipient_address:
          type: string
      required:
        - wallet_id
        - recipient_address
      example:
        wallet_id: source_wallet
        recipient_address: q1dxlf6vap2566t8w3z8f5j5lxy9n036zfsaytjve7fedsw6w8c9q9ctrwfz6ryyjwkgvj6tjg70f
    GetPublicKeyRequest:
      type: object
      properties:
        wallet_id:
          type: string
      required:
        - wallet_id
      example:
        wallet_id: source_wallet
    GetPublicKeyResponse:
      type: object
      properties:
        wallet_id:
          type: string
        public_key:
          type: string
      required:
        - wallet_id
        - public_key
      example:
        wallet_id: source_wallet
        public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
    ExportWalletRequest:
      type: object
      properties:
        wallet_id:
          type: string
      required:
        - wallet_id
      example:
        wallet_id: source_wallet
    ExportWalletResponse:
      type: object
      properties:
        wallet_id:
          type: string
        encrypted_sk:
          type: string
        salt:
          type: string
      required:
        - wallet_id
        - encrypted_sk
        - salt
      example:
        wallet_id: source_wallet
        encrypted_sk: 44d2836bbfcc7c69dd35dbe854d54a093be9a1be7f9d658325a8d2526f67ede16abf0d1430edab07be9b8c12070260af
        salt: 27ca2bf75fe4c1564398459bd2f39a89645bf98aeeb1f99a9c9efa6e5c39cbfe
    ImportWalletRequest:
      type: object
      properties:
        wallet_id:
          type: string
        encrypted_sk:
          type: string
        authorization:
          type: string
        salt:
          type: string
      required:
        - wallet_id
        - encrypted_sk
        - authorization
        - salt
      example:
        wallet_id: source_wallet
        encrypted_sk: 44d2836bbfcc7c69dd35dbe854d54a093be9a1be7f9d658325a8d2526f67ede16abf0d1430edab07be9b8c12070260af
        authorization: PrivacyIsAwesome
        salt: 27ca2bf75fe4c1564398459bd2f39a89645bf98aeeb1f99a9c9efa6e5c39cbfe
    ExportAuditorAccessWalletRequest:
      type: object
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        recipient_payment_address:
          type: string
      required:
        - wallet_id
        - authorization
        - recipient_payment_address
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
        recipient_payment_address: q1dxlf6vap2566t8w3z8f5j5lxy9n036zfsaytjve7fedsw6w8c9q9ctrwfz6ryyjwkgvj6tjg70f
    ExportAuditorAccessWalletResponse:
      type: object
      properties:
        wallet_id:
          type: string
        public_key:
          type: string
        access_key:
          type: string
      required:
        - wallet_id
        - public_key
        - access_key
      example:
        wallet_id: source_wallet
        public_key: 8a907d5c070223b4fd30a05e2e103ae6f7bbae2bc6ea36258b5a7ac9a4b8f646
        access_key: 9c1616ccb51d4022c7b8654b1a69682654c5da6570b37d3cd2a2368a758f7922
    ImportAuditorAccessWalletRequest:
      type: object
      properties:
        wallet_id:
          type: string
        public_key:
          type: string
        access_key:
          type: string
      required:
        - wallet_id
        - public_key
        - access_key
      example:
        wallet_id: source_wallet
        public_key: 8a907d5c070223b4fd30a05e2e103ae6f7bbae2bc6ea36258b5a7ac9a4b8f646
        access_key: 9c1616ccb51d4022c7b8654b1a69682654c5da6570b37d3cd2a2368a758f7922
    GenerateWalletRequest:
      type: object
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
      required:
        - wallet_id
        - authorization
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
    DeleteWalletRequest:
      type: object
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
      required:
        - wallet_id
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
    UnlockWalletRequest:
      type: object
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        seconds:
          type: integer
      required:
        - wallet_id
        - authorization
        - seconds
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
        seconds: 600
    CreateRuleRequest:
      type: object
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        rules_to_add:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
      required:
        - wallet_id
        - authorization
        - rules_to_add
      example:
        wallet_id: issuer_wallet
        authorization: PrivacyIsAwesome
        rules_to_add:
          - public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
            can_issue_confidentially: false
            can_issue_asset_id_first: 100
            can_issue_asset_id_last: 112
            is_admin: false
    DeleteRuleRequest:
      type: object
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        rules_to_delete:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
      required:
        - wallet_id
        - authorization
        - rules_to_delete
      example:
        wallet_id: issuer_wallet
        authorization: PrivacyIsAwesome
        rules_to_delete:
          - public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
            can_issue_confidentially: false
            can_issue_asset_id_first: 100
            can_issue_asset_id_last: 112
            is_admin: false
    Rule:
      type: object
      properties:
        public_key:
          type: string
        can_issue_confidentially:
          type: boolean
        can_issue_asset_id_first:
          type: integer
        can_issue_asset_id_last:
          type: integer
        is_admin:
          type: boolean
      required:
        - public_key
        - can_issue_confidentially
        - can_issue_asset_id_first
        - can_issue_asset_id_last
        - is_admin
      example:
        public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
        can_issue_confidentially: false
        can_issue_asset_id_first: 100
        can_issue_asset_id_last: 112
        is_admin: false
    ErrorResponse:
      type: object
      properties:
        error_code:
          type: integer
        message:
          type: string
      required:
        - error_code
      example:
        error_code: 400
        message: "error message"
    AsyncTaskCreatedResponse:
      type: object
      properties:
        id:
          type: string
      required:
        - id
      example:
        id: "70a88558-2b8b-4b63-a5b6-2c54b24377f5"


    AnalyticTransaction:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/AnalyticsTxMetadata'
        content:
          oneOf:
            - $ref: '#/components/schemas/AnalyticsIssueTx'
            - $ref: '#/components/schemas/AnalyticsMultiTransferTx'
            - $ref: '#/components/schemas/AnalyticsRuleTx'
      example:
        metadata:
          type: 'Issue'
          tx_hash: 'd379aa4e5e40552910c8ae456c65dcf51e9779fc9281ac2dc9e677ec810af6b1'
          block_hash: '9701560ba877d5552303cb54d10d461a0836a324649608a0a56c885b631b0434'
          timestamp: '2019-05-20T02:10:46-07:00'
          index_in_block: 1
          block_height: 100
        content:
          outputs:
            - is_confidntial: false,
              public_issuance_description:
                amount: 12
                asset_id: 5
              output_description:
                cv: 'c2366ace373af05c92fc315dd502637ee4fa6ba46f05319ddcff209619bbaa27'
                cm: '0e148cb409e313cb13f28c6d8110fdb7f4daf119db99cedeab1234bd64ac4681'
                epk: 'f58c334ecde6e3efaeba6faedadb615c0fad30115a62e18c872481a293bd589d'
                enc_note: '3222a401fc15115399e3b54c51509d9e5fafec2ddede463a8606d8d405f45c88a5a0d6e29728745407cdfe6d4b98a863b55cc230a463436e9f228c984085cc3082c48f6a2a9cb3b6a2ebb140e202c124b4d8483bc75e9978db08ff818fcf9ffa5c3fe226114fe27f41673220734471611af7255bbfb2bd4c2793fa45372f9ac3e91b4c2de92f0688dd92b1a993ed268e024e48f4e04c406a6e898c3bb3b290e3fde79bdaa0f9d9'
                enc_sender: '9cb97b6764e8ad490bd5246c133245bc9424455b9cb7cc98fc1e054c8d0827863b5f89424bc910a09040461b4d01c5bfe732dcd491dc8cd78e0eba00e62919105211c1ce8d7ab1a37adc87d118890ffd'
                zkproof: 'cc43f2c6be02d5e340dcbc1cae9ab4c8199731e115637186384d2e0a30051daa9031a9546683483d1d32b27b0fd47afd03c393cb5f1a5e68319889da501f296126a4f98f9a9ee1db5ba9d9ecda561176ac2d5ca00b45eaf0a09ad20785ed7c5bb5351b3116b1c7858ed44b9abdcd4aeefa4afa7d2f03d64c1b60b316a6d40595a183132f6ef391bf44002a7677f27f793e7661d2a00917e63a13af3af50d5f99f02bf24af4d743f51fce0712252dba7fa89fa5d89855d9c9d323ab1ffe3f0470'
          public_key: 'bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204'
          signature: '97a94ce9ad8fdb4fa9933b67e4022fe92e19516728cb1b5f43edf3aaad994a544d13725708fd38a683b82a2d0092b89a09f5463ce688b39215b10f6a732e480b'

    AnalyticsTxMetadata:
      type: object
      properties:
        type:
          type: string
        tx_hash:
          type: string
        block_hash:
          type: string
        timestamp:
          type: string
        index_in_block:
          type: integer
        block_height:
          type: integer

    AnalyticsIssueTx:
      type: object
      properties:
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsOutput'
        public_key:
          type: string
        signature:
          type: string

    AnalyticsMultiTransferTx:
      type: object
      properties:
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsTransferTx'

    AnalyticsTransferTx:
      type: object
      properties:
        asset_converter_descriptions:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsAssetConverterProofDescription'
        spends:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsSpendDescription'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsOutputDescription'
        binding_sig:
          type: string
        spend_auth_sigs:
          type: array
          items:
            type: string

    AnalyticsRuleTx:
      type: object
      properties:
        sender_public_key:
          type: string
        rules_to_add:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsRuleDefinition'
        rules_to_delete:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsRuleDefinition'
        nonce:
          type: integer
        signature:
          type: string

    AnalyticsRuleDefinition:
      type: object
      properties:
        public_key:
          type: string
        can_issue_confidentially:
          type: boolean
        is_admin:
          type: boolean
        can_issue_asset_id_first:
          type: integer
        can_issue_asset_id_last:
          type: integer
      example:
        public_key: "AAAAAAAAAA=="
        can_issue_confidentially: true
        is_admin: true
        can_issue_asset_id_first: 11
        can_issue_asset_id_last: 20

    AnalyticsRuleWalletDefinition:
      type: object
      properties:
        public_key:
          type: string
        can_issue_confidentially:
          type: boolean
        is_admin:
          type: boolean
        can_issue_asset_id_first:
          type: integer
        can_issue_asset_id_last:
          type: integer
        operation:
          type: string
      example:
        public_key: "AAAAAAAAAA=="
        can_issue_confidentially: true
        is_admin: true
        can_issue_asset_id_first: 11
        can_issue_asset_id_last: 20
        operation: "CreateRule"

    AnalyticsOutput:
      type: object
      properties:
        is_confidential:
          type: boolean
        public_issuance_description:
          $ref: '#/components/schemas/AnalyticsPublicIssuanceDescription'
        confidential_issuance_description:
          $ref: '#/components/schemas/AnalyticsConfidentialIssuanceDescription'
        output_description:
          $ref: '#/components/schemas/AnalyticsOutputDescription'

    AnalyticsPublicIssuanceDescription:
      type: object
      nullable: true
      required:
        - asset_id
        - amount
      properties:
        asset_id:
          type: integer
          minimum: 1
        amount:
          type: integer
          minimum: 0
      example:
        asset_id: 10
        amount: 3

    AnalyticsAssetConverterProofDescription:
      type: object
      properties:
        input_cv:
          type: string
        amount_cv:
          type: string
        asset_cv:
          type: string
        zkproof:
          type: string
      example:
        asset_cv: "AAAAAAAAAAA="
        amount_cv: "AAAAAAAAAAA="
        input_cv: "AAAAAAAAAAA="
        zkproof: "000AAAAAAA="

    AnalyticsSpendDescription:
      type: object
      properties:
        cv:
          type: string
        anchor:
          type: string
        nullifier:
          type: string
        rk_out:
          type: string
        zkproof:
          type: string
      example:
        cv: "AAAAAAAAAAA="
        anchor: "AAAAAAAAAAA="
        nullifier: "AAAAAAAAAAA="
        zkproof: "000AAAAAAA="
        rk_out: "AAAAAAAAAAA="

    AnalyticsOutputDescription:
      type: object
      properties:
        cv:
          type: string
        cm:
          type: string
        epk:
          type: string
        zkproof:
          type: string
        enc_note:
          type: string
        enc_sender:
          type: string
      example:
        cv: "AAAAAAAAAAA="
        cm: "000AAAAAAA="
        epk: "AAAAAAAAAAA="
        zkproof: "000AAAAAAA="
        enc_note: "AAAAAAAAAAA="
        enc_sender: "000AAAAAAA="

    AnalyticsConfidentialIssuanceDescription:
      type: object
      nullable: true
      properties:
        input_cv:
          type: string
        zkproof:
          type: string
        rule:
          $ref: '#/components/schemas/AnalyticsRule'
      example:
        input_cv: "AAAAAAAAAAA="
        zkproof: "000AAAAAAA="
        rule:
          - min_id: 11
          - max_id: 20

    AnalyticsRule:
      type: object
      properties:
        min_id:
          type: integer
        max_id:
          type: integer
      required:
        - min_id
        - max_id
      example:
        min_id: 11
        max_id: 20

    GetWalletActivityResponse:
      type: object
      properties:
        wallet_id:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticWalletTx'

    AnalyticWalletTx:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/AnalyticWalletMetadata'
        content:
          oneOf:
            - $ref: '#/components/schemas/AnalyticIssueWalletTx'
            - $ref: '#/components/schemas/AnalyticTransferWalletTx'
            - $ref: '#/components/schemas/AnalyticRuleWalletTx'

    AnalyticWalletMetadata:
      type: object
      properties:
        type:
          type: string
        tx_hash:
          type: string
        timestamp:
          type: string

    AnalyticIssueWalletTx:
      type: object
      properties:
        is_incoming:
          type: boolean
        issued_by_self:
          type: boolean
        sender_id:
          type: string
        memo:
          type: string
        recipient_address:
          type: string
        asset_id:
          type: integer
        amount:
          type: integer
        is_confidential:
          type: boolean

    AnalyticTransferWalletTx:
      type: object
      properties:
        is_incoming:
          type: boolean
        sender_id:
          type: string
        memo:
          type: string
        recipient_address:
          type: string
        asset_id:
          type: integer
        amount:
          type: integer

    AnalyticRuleWalletTx:
      type: object
      properties:
        signed_by_self:
          type: boolean
        rule_affect_self:
          type: boolean
        tx_signer:
          type: string
        rule:
          $ref: '#/components/schemas/AnalyticsRuleWalletDefinition'

    HealthcheckResponse:
      type: object
      properties:
        version:
          type: string
        blockchain_connector:
          $ref: '#/components/schemas/HealthcheckResponseItem'
        message_queue:
          $ref: '#/components/schemas/HealthcheckResponseItem'
        database:
          $ref: '#/components/schemas/HealthcheckResponseItem'
        passing:
          type: boolean
      example:
        version: '1.3.0'
        blockchain_connector:
          error: 'Post http://localhost:8082/connector/get_block: dial tcp 127.0.0.1:8082:
      connect: connection refused'
          passing: false
        database:
          error: ''
          passing: true
        mq:
          error: ''
          passing: true
        passing: false

    HealthcheckResponseItem:
      type: object
      properties:
        passing:
          type: boolean
        error:
          type: string

openapi: 3.0.0
info:
  title: QEDIT - Asset Transfers
  version: 1.4.1
servers:
- url: http://{server_url}:12052
  variables:
    server_url:
      default: localhost
security:
- ApiKeyAuth: []
paths:
  /wallet/get_balances:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWalletBalanceRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWalletBalanceResponse'
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Get wallets balance
      tags:
      - Wallet
  /wallet/issue_asset:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueAssetRequest'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
          description: Created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Issue assets [async call]
      tags:
      - Wallet
  /wallet/transfer_asset:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferAssetRequest'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
          description: Created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Transfer assets [async call]
      tags:
      - Wallet
  /wallet/get_new_address:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNewAddressRequest'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNewAddressResponse'
          description: Success/Created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Get a new address from a given diversifier or generate randomly
      tags:
      - Wallet
  /wallet/get_public_key:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPublicKeyRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPublicKeyResponse'
          description: Success/Created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Get wallet public key
      tags:
      - Wallet
  /wallet/create_rule:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRuleRequest'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
          description: Created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Create & broadcast add-config-rule [async call]
      tags:
      - Wallet
  /wallet/delete_rule:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRuleRequest'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
          description: Created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Create & broadcast delete-config-rule [async call]
      tags:
      - Wallet
  /wallet/get_activity:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWalletActivityRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWalletActivityResponse'
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Get wallet activity (transactions)
      tags:
      - Wallet
  /analytics/get_network_activity:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNetworkActivityRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkActivityResponse'
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Get details on past blocks
      tags:
      - Analytics
  /node/generate_wallet:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateWalletRequest'
        required: true
      responses:
        200:
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Generate a new wallet
      tags:
      - Node
  /node/delete_wallet:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWalletRequest'
        required: true
      responses:
        200:
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Delete a wallet
      tags:
      - Node
  /node/export_wallet:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportWalletRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportWalletResponse'
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Export wallet secret key
      tags:
      - Node
  /node/import_wallet:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportWalletRequest'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
          description: Created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Import wallet from secret key [async call]
      tags:
      - Node
  /node/export_auditor_access_wallet:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAuditorAccessWalletRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportAuditorAccessWalletResponse'
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Export a viewing key that allows an auditor to view all transactions to and from a wallet. The viewing key is encrypted for the auditor identified by recipient_payment_address. The viewing key does not enable the auditor to make transactions.
      tags:
      - Node
  /node/import_auditor_access_wallet:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAuditorAccessWalletRequest'
        required: true
      responses:
        200:
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Import a viewing key generated by export_auditor_access_wallet. This will create a read-only wallet which can be queried with endpoints such as get_activity and get_balances, but cannot be used to perform transactions.
      tags:
      - Node
  /node/unlock_wallet:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnlockWalletRequest'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskCreatedResponse'
          description: Created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Unlocks a wallet for a given amount of seconds [async call]
      tags:
      - Node
  /node/get_rules:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRulesResponse'
          description: Success
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Get network governance rules
      tags:
      - Node
  /node/get_all_wallets:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllWalletsResponse'
          description: Success
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Get all wallet labels
      tags:
      - Node
  /node/get_task_status:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTaskStatusRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskStatusResponse'
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Get a specific task (by ID)
      tags:
      - Node
  /node/get_tasks:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTasksRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksResponse'
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Get a list of tasks by results/types
      tags:
      - Node
  /health:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthcheckResponse'
          description: Success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error
      summary: Perform a healthcheck of the node and its dependent services
      tags:
      - Health
components:
  schemas:
    IntPointer:
      format: int32
      type: integer
    GetWalletBalanceRequest:
      example:
        wallet_id: source_wallet
      properties:
        wallet_id:
          type: string
      required:
      - wallet_id
      type: object
    BalanceForAsset:
      example:
        wallet_id: source_wallet
      properties:
        asset_id:
          format: int32
          type: integer
        amount:
          format: int32
          type: integer
      required:
      - amount
      - asset_id
      type: object
    GetWalletBalanceResponse:
      example:
        wallet_id: source_wallet
        assets:
        - asset_id: 1
          amount: 8
      properties:
        wallet_id:
          type: string
        assets:
          items:
            $ref: '#/components/schemas/BalanceForAsset'
          type: array
      required:
      - assets
      - wallet_id
      type: object
    TransferAssetRequest:
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
        recipient_address: q1dxlf6vap2566t8w3z8f5j5lxy9n036zfsaytjve7fedsw6w8c9q9ctrwfz6ryyjwkgvj6tjg70f
        amount: 4
        asset_id: 1
        memo: '{"recipient_name": "Dan"}'
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        recipient_address:
          type: string
        amount:
          format: int32
          type: integer
        asset_id:
          format: int32
          type: integer
        memo:
          type: string
      required:
      - amount
      - asset_id
      - authorization
      - memo
      - recipient_address
      - wallet_id
      type: object
    GetWalletActivityRequest:
      example:
        wallet_id: source_wallet
        start_index: 0
        number_of_results: 10
      properties:
        wallet_id:
          type: string
        start_index:
          format: int32
          type: integer
        number_of_results:
          format: int32
          type: integer
      required:
      - number_of_results
      - start_index
      - wallet_id
      type: object
    TransactionsForWallet:
      properties:
        is_incoming:
          type: boolean
        asset_id:
          format: int32
          type: integer
        amount:
          format: int32
          type: integer
        recipient_address:
          type: string
        memo:
          type: string
        id:
          type: string
      required:
      - amount
      - asset_id
      - id
      - is_incoming
      - memo
      - recipient_address
      type: object
    GetRulesResponse:
      example:
        rules:
        - public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
          can_issue_confidentially: false
          can_issue_asset_id_first: 100
          can_issue_asset_id_last: 112
          is_admin: false
        - public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
          can_issue_confidentially: false
          can_issue_asset_id_first: 100
          can_issue_asset_id_last: 112
          is_admin: false
      properties:
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
      type: object
    GetAllWalletsResponse:
      example:
        wallet_ids:
        - Jane
        - John
        - Marty
      properties:
        wallet_ids:
          items:
            type: string
          type: array
      type: object
    GetTaskStatusRequest:
      example:
        id: 5aaa4045-e949-4c44-a7ef-25fb55a1afa6
      properties:
        id:
          type: string
      required:
      - id
      type: object
    GetTasksRequest:
      example:
        start_index: 0
        number_of_results: 10
        types:
        - unlock_wallet
        - transfer_asset
        results:
        - in_progress
        - failure
        order: asc
      properties:
        start_index:
          format: int32
          type: integer
        number_of_results:
          format: int32
          type: integer
        types:
          items:
            enum:
            - unlock_wallet
            - transfer_asset
            - issue_asset
            - alter_rule
            type: string
          type: array
        results:
          items:
            default: in_progress
            enum:
            - pending
            - failure
            - in_progress
            - success
            type: string
          type: array
        order:
          default: desc
          pattern: ^(asc|desc)$
          type: string
      required:
      - number_of_results
      - start_index
      type: object
    GetTaskStatusResponse:
      example:
        id: 5aaa4045-e949-4c44-a7ef-25fb55a1afa6
        created_at: 2019-03-12T16:40:22
        updated_at: 2019-03-12T16:41:17
        result: success
        tx_hash: 0xd379aa4e5e40552910c8ae456c65dcf51e9779fc9281ac2dc9e677ec810af6b1
        type: transfer_asset
        data: {}
      properties:
        id:
          type: string
        created_at:
          format: date
          type: string
        updated_at:
          format: date
          type: string
        result:
          type: string
        tx_hash:
          type: string
        qedit_tx_hash:
          type: string
        type:
          type: string
        data:
          type: object
        error:
          type: string
      type: object
    GetTasksResponse:
      example:
        tasks:
        - id: 5aaa4045-e949-4c44-a7ef-25fb55a1afa6
          created_at: 2019-03-12T16:40:22
          updated_at: 2019-03-12T16:41:17
          result: success
          tx_hash: 0xd379aa4e5e40552910c8ae456c65dcf51e9779fc9281ac2dc9e677ec810af6b1
          type: transfer_asset
          data: {}
        - id: 5aaa4045-e949-4c44-a7ef-25fb55a1afa6
          created_at: 2019-03-12T16:40:22
          updated_at: 2019-03-12T16:41:17
          result: success
          tx_hash: 0xd379aa4e5e40552910c8ae456c65dcf51e9779fc9281ac2dc9e677ec810af6b1
          type: transfer_asset
          data: {}
      properties:
        tasks:
          items:
            $ref: '#/components/schemas/GetTaskStatusResponse'
          type: array
      type: object
    GetNetworkActivityRequest:
      example:
        start_index: 0
        number_of_results: 10
      properties:
        start_index:
          format: int32
          type: integer
        number_of_results:
          format: int32
          type: integer
      required:
      - number_of_results
      - start_index
      type: object
    GetNetworkActivityResponse:
      example:
        transactions:
        - metadata:
            type: Issue
            tx_hash: d379aa4e5e40552910c8ae456c65dcf51e9779fc9281ac2dc9e677ec810af6b1
            block_hash: 9701560ba877d5552303cb54d10d461a0836a324649608a0a56c885b631b0434
            timestamp: 2019-05-20T02:10:46-07:00
            index_in_block: 1
            block_height: 100
          content:
            outputs:
            - is_confidntial: false,
              public_issuance_description:
                amount: 12
                asset_id: 5
              output_description:
                cv: c2366ace373af05c92fc315dd502637ee4fa6ba46f05319ddcff209619bbaa27
                cm: 0e148cb409e313cb13f28c6d8110fdb7f4daf119db99cedeab1234bd64ac4681
                epk: f58c334ecde6e3efaeba6faedadb615c0fad30115a62e18c872481a293bd589d
                enc_note: 3222a401fc15115399e3b54c51509d9e5fafec2ddede463a8606d8d405f45c88a5a0d6e29728745407cdfe6d4b98a863b55cc230a463436e9f228c984085cc3082c48f6a2a9cb3b6a2ebb140e202c124b4d8483bc75e9978db08ff818fcf9ffa5c3fe226114fe27f41673220734471611af7255bbfb2bd4c2793fa45372f9ac3e91b4c2de92f0688dd92b1a993ed268e024e48f4e04c406a6e898c3bb3b290e3fde79bdaa0f9d9
                enc_sender: 9cb97b6764e8ad490bd5246c133245bc9424455b9cb7cc98fc1e054c8d0827863b5f89424bc910a09040461b4d01c5bfe732dcd491dc8cd78e0eba00e62919105211c1ce8d7ab1a37adc87d118890ffd
                zkproof: cc43f2c6be02d5e340dcbc1cae9ab4c8199731e115637186384d2e0a30051daa9031a9546683483d1d32b27b0fd47afd03c393cb5f1a5e68319889da501f296126a4f98f9a9ee1db5ba9d9ecda561176ac2d5ca00b45eaf0a09ad20785ed7c5bb5351b3116b1c7858ed44b9abdcd4aeefa4afa7d2f03d64c1b60b316a6d40595a183132f6ef391bf44002a7677f27f793e7661d2a00917e63a13af3af50d5f99f02bf24af4d743f51fce0712252dba7fa89fa5d89855d9c9d323ab1ffe3f0470
            public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
            signature: 97a94ce9ad8fdb4fa9933b67e4022fe92e19516728cb1b5f43edf3aaad994a544d13725708fd38a683b82a2d0092b89a09f5463ce688b39215b10f6a732e480b
        - metadata:
            type: Issue
            tx_hash: d379aa4e5e40552910c8ae456c65dcf51e9779fc9281ac2dc9e677ec810af6b1
            block_hash: 9701560ba877d5552303cb54d10d461a0836a324649608a0a56c885b631b0434
            timestamp: 2019-05-20T02:10:46-07:00
            index_in_block: 1
            block_height: 100
          content:
            outputs:
            - is_confidntial: false,
              public_issuance_description:
                amount: 12
                asset_id: 5
              output_description:
                cv: c2366ace373af05c92fc315dd502637ee4fa6ba46f05319ddcff209619bbaa27
                cm: 0e148cb409e313cb13f28c6d8110fdb7f4daf119db99cedeab1234bd64ac4681
                epk: f58c334ecde6e3efaeba6faedadb615c0fad30115a62e18c872481a293bd589d
                enc_note: 3222a401fc15115399e3b54c51509d9e5fafec2ddede463a8606d8d405f45c88a5a0d6e29728745407cdfe6d4b98a863b55cc230a463436e9f228c984085cc3082c48f6a2a9cb3b6a2ebb140e202c124b4d8483bc75e9978db08ff818fcf9ffa5c3fe226114fe27f41673220734471611af7255bbfb2bd4c2793fa45372f9ac3e91b4c2de92f0688dd92b1a993ed268e024e48f4e04c406a6e898c3bb3b290e3fde79bdaa0f9d9
                enc_sender: 9cb97b6764e8ad490bd5246c133245bc9424455b9cb7cc98fc1e054c8d0827863b5f89424bc910a09040461b4d01c5bfe732dcd491dc8cd78e0eba00e62919105211c1ce8d7ab1a37adc87d118890ffd
                zkproof: cc43f2c6be02d5e340dcbc1cae9ab4c8199731e115637186384d2e0a30051daa9031a9546683483d1d32b27b0fd47afd03c393cb5f1a5e68319889da501f296126a4f98f9a9ee1db5ba9d9ecda561176ac2d5ca00b45eaf0a09ad20785ed7c5bb5351b3116b1c7858ed44b9abdcd4aeefa4afa7d2f03d64c1b60b316a6d40595a183132f6ef391bf44002a7677f27f793e7661d2a00917e63a13af3af50d5f99f02bf24af4d743f51fce0712252dba7fa89fa5d89855d9c9d323ab1ffe3f0470
            public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
            signature: 97a94ce9ad8fdb4fa9933b67e4022fe92e19516728cb1b5f43edf3aaad994a544d13725708fd38a683b82a2d0092b89a09f5463ce688b39215b10f6a732e480b
      properties:
        transactions:
          items:
            $ref: '#/components/schemas/AnalyticTransaction'
          type: array
      type: object
    IssueAssetRequest:
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
        recipient_address: q1dxlf6vap2566t8w3z8f5j5lxy9n036zfsaytjve7fedsw6w8c9q9ctrwfz6ryyjwkgvj6tjg70f
        amount: 4
        asset_id: 1
        confidential: false
        memo: '{"recipient_name": "Dan"}'
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        recipient_address:
          type: string
        amount:
          format: int32
          type: integer
        asset_id:
          format: int32
          type: integer
        confidential:
          type: boolean
        memo:
          type: string
      required:
      - amount
      - asset_id
      - authorization
      - confidential
      - memo
      - recipient_address
      - wallet_id
      type: object
    GetNewAddressRequest:
      example:
        wallet_id: source_wallet
      properties:
        wallet_id:
          type: string
        diversifier:
          type: string
      required:
      - wallet_id
      type: object
    GetNewAddressResponse:
      example:
        wallet_id: source_wallet
        recipient_address: q1dxlf6vap2566t8w3z8f5j5lxy9n036zfsaytjve7fedsw6w8c9q9ctrwfz6ryyjwkgvj6tjg70f
      properties:
        wallet_id:
          type: string
        recipient_address:
          type: string
      required:
      - recipient_address
      - wallet_id
      type: object
    GetPublicKeyRequest:
      example:
        wallet_id: source_wallet
      properties:
        wallet_id:
          type: string
      required:
      - wallet_id
      type: object
    GetPublicKeyResponse:
      example:
        wallet_id: source_wallet
        public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
      properties:
        wallet_id:
          type: string
        public_key:
          type: string
      required:
      - public_key
      - wallet_id
      type: object
    ExportWalletRequest:
      example:
        wallet_id: source_wallet
      properties:
        wallet_id:
          type: string
      required:
      - wallet_id
      type: object
    ExportWalletResponse:
      example:
        wallet_id: source_wallet
        encrypted_sk: 44d2836bbfcc7c69dd35dbe854d54a093be9a1be7f9d658325a8d2526f67ede16abf0d1430edab07be9b8c12070260af
        salt: 27ca2bf75fe4c1564398459bd2f39a89645bf98aeeb1f99a9c9efa6e5c39cbfe
      properties:
        wallet_id:
          type: string
        encrypted_sk:
          type: string
        salt:
          type: string
      required:
      - encrypted_sk
      - salt
      - wallet_id
      type: object
    ImportWalletRequest:
      example:
        wallet_id: source_wallet
        encrypted_sk: 44d2836bbfcc7c69dd35dbe854d54a093be9a1be7f9d658325a8d2526f67ede16abf0d1430edab07be9b8c12070260af
        authorization: PrivacyIsAwesome
        salt: 27ca2bf75fe4c1564398459bd2f39a89645bf98aeeb1f99a9c9efa6e5c39cbfe
      properties:
        wallet_id:
          type: string
        encrypted_sk:
          type: string
        authorization:
          type: string
        salt:
          type: string
      required:
      - authorization
      - encrypted_sk
      - salt
      - wallet_id
      type: object
    ExportAuditorAccessWalletRequest:
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
        recipient_payment_address: q1dxlf6vap2566t8w3z8f5j5lxy9n036zfsaytjve7fedsw6w8c9q9ctrwfz6ryyjwkgvj6tjg70f
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        recipient_payment_address:
          type: string
      required:
      - authorization
      - recipient_payment_address
      - wallet_id
      type: object
    ExportAuditorAccessWalletResponse:
      example:
        wallet_id: source_wallet
        public_key: 8a907d5c070223b4fd30a05e2e103ae6f7bbae2bc6ea36258b5a7ac9a4b8f646
        access_key: 9c1616ccb51d4022c7b8654b1a69682654c5da6570b37d3cd2a2368a758f7922
      properties:
        wallet_id:
          type: string
        public_key:
          type: string
        access_key:
          type: string
      required:
      - access_key
      - public_key
      - wallet_id
      type: object
    ImportAuditorAccessWalletRequest:
      example:
        wallet_id: source_wallet
        public_key: 8a907d5c070223b4fd30a05e2e103ae6f7bbae2bc6ea36258b5a7ac9a4b8f646
        access_key: 9c1616ccb51d4022c7b8654b1a69682654c5da6570b37d3cd2a2368a758f7922
      properties:
        wallet_id:
          type: string
        public_key:
          type: string
        access_key:
          type: string
      required:
      - access_key
      - public_key
      - wallet_id
      type: object
    GenerateWalletRequest:
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
      required:
      - authorization
      - wallet_id
      type: object
    DeleteWalletRequest:
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
      required:
      - wallet_id
      type: object
    UnlockWalletRequest:
      example:
        wallet_id: source_wallet
        authorization: PrivacyIsAwesome
        seconds: 600
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        seconds:
          format: int32
          type: integer
      required:
      - authorization
      - seconds
      - wallet_id
      type: object
    CreateRuleRequest:
      example:
        wallet_id: issuer_wallet
        authorization: PrivacyIsAwesome
        rules_to_add:
        - public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
          can_issue_confidentially: false
          can_issue_asset_id_first: 100
          can_issue_asset_id_last: 112
          is_admin: false
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        rules_to_add:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
      required:
      - authorization
      - rules_to_add
      - wallet_id
      type: object
    DeleteRuleRequest:
      example:
        wallet_id: issuer_wallet
        authorization: PrivacyIsAwesome
        rules_to_delete:
        - public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
          can_issue_confidentially: false
          can_issue_asset_id_first: 100
          can_issue_asset_id_last: 112
          is_admin: false
      properties:
        wallet_id:
          type: string
        authorization:
          type: string
        rules_to_delete:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
      required:
      - authorization
      - rules_to_delete
      - wallet_id
      type: object
    Rule:
      example:
        public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
        can_issue_confidentially: false
        can_issue_asset_id_first: 100
        can_issue_asset_id_last: 112
        is_admin: false
      properties:
        public_key:
          type: string
        can_issue_confidentially:
          type: boolean
        can_issue_asset_id_first:
          format: int32
          type: integer
        can_issue_asset_id_last:
          format: int32
          type: integer
        is_admin:
          type: boolean
      required:
      - can_issue_asset_id_first
      - can_issue_asset_id_last
      - can_issue_confidentially
      - is_admin
      - public_key
      type: object
    ErrorResponse:
      example:
        error_code: 400
        message: error message
      properties:
        error_code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - error_code
      type: object
    AsyncTaskCreatedResponse:
      example:
        id: 70a88558-2b8b-4b63-a5b6-2c54b24377f5
      properties:
        id:
          type: string
      required:
      - id
      type: object
    AnalyticTransaction:
      example:
        metadata:
          type: Issue
          tx_hash: d379aa4e5e40552910c8ae456c65dcf51e9779fc9281ac2dc9e677ec810af6b1
          block_hash: 9701560ba877d5552303cb54d10d461a0836a324649608a0a56c885b631b0434
          timestamp: 2019-05-20T02:10:46-07:00
          index_in_block: 1
          block_height: 100
        content:
          outputs:
          - is_confidntial: false,
            public_issuance_description:
              amount: 12
              asset_id: 5
            output_description:
              cv: c2366ace373af05c92fc315dd502637ee4fa6ba46f05319ddcff209619bbaa27
              cm: 0e148cb409e313cb13f28c6d8110fdb7f4daf119db99cedeab1234bd64ac4681
              epk: f58c334ecde6e3efaeba6faedadb615c0fad30115a62e18c872481a293bd589d
              enc_note: 3222a401fc15115399e3b54c51509d9e5fafec2ddede463a8606d8d405f45c88a5a0d6e29728745407cdfe6d4b98a863b55cc230a463436e9f228c984085cc3082c48f6a2a9cb3b6a2ebb140e202c124b4d8483bc75e9978db08ff818fcf9ffa5c3fe226114fe27f41673220734471611af7255bbfb2bd4c2793fa45372f9ac3e91b4c2de92f0688dd92b1a993ed268e024e48f4e04c406a6e898c3bb3b290e3fde79bdaa0f9d9
              enc_sender: 9cb97b6764e8ad490bd5246c133245bc9424455b9cb7cc98fc1e054c8d0827863b5f89424bc910a09040461b4d01c5bfe732dcd491dc8cd78e0eba00e62919105211c1ce8d7ab1a37adc87d118890ffd
              zkproof: cc43f2c6be02d5e340dcbc1cae9ab4c8199731e115637186384d2e0a30051daa9031a9546683483d1d32b27b0fd47afd03c393cb5f1a5e68319889da501f296126a4f98f9a9ee1db5ba9d9ecda561176ac2d5ca00b45eaf0a09ad20785ed7c5bb5351b3116b1c7858ed44b9abdcd4aeefa4afa7d2f03d64c1b60b316a6d40595a183132f6ef391bf44002a7677f27f793e7661d2a00917e63a13af3af50d5f99f02bf24af4d743f51fce0712252dba7fa89fa5d89855d9c9d323ab1ffe3f0470
          public_key: bf45ab74bd4a46fe7a2432ba05e2f726bf4fe42a80052849e13e2541230d3204
          signature: 97a94ce9ad8fdb4fa9933b67e4022fe92e19516728cb1b5f43edf3aaad994a544d13725708fd38a683b82a2d0092b89a09f5463ce688b39215b10f6a732e480b
      properties:
        metadata:
          $ref: '#/components/schemas/AnalyticsTxMetadata'
        content:
          oneOf:
          - $ref: '#/components/schemas/AnalyticsIssueTx'
          - $ref: '#/components/schemas/AnalyticsMultiTransferTx'
          - $ref: '#/components/schemas/AnalyticsRuleTx'
      type: object
    AnalyticsTxMetadata:
      properties:
        type:
          type: string
        tx_hash:
          type: string
        block_hash:
          type: string
        timestamp:
          type: string
        index_in_block:
          format: int32
          type: integer
        block_height:
          format: int32
          type: integer
      type: object
    AnalyticsIssueTx:
      properties:
        outputs:
          items:
            $ref: '#/components/schemas/AnalyticsOutput'
          type: array
        public_key:
          type: string
        signature:
          type: string
      type: object
    AnalyticsMultiTransferTx:
      properties:
        transfers:
          items:
            $ref: '#/components/schemas/AnalyticsTransferTx'
          type: array
      type: object
    AnalyticsTransferTx:
      properties:
        asset_converter_descriptions:
          items:
            $ref: '#/components/schemas/AnalyticsAssetConverterProofDescription'
          type: array
        spends:
          items:
            $ref: '#/components/schemas/AnalyticsSpendDescription'
          type: array
        outputs:
          items:
            $ref: '#/components/schemas/AnalyticsOutputDescription'
          type: array
        binding_sig:
          type: string
        spend_auth_sigs:
          items:
            type: string
          type: array
      type: object
    AnalyticsRuleTx:
      properties:
        sender_public_key:
          type: string
        rules_to_add:
          items:
            $ref: '#/components/schemas/AnalyticsRuleDefinition'
          type: array
        rules_to_delete:
          items:
            $ref: '#/components/schemas/AnalyticsRuleDefinition'
          type: array
        nonce:
          format: int32
          type: integer
        signature:
          type: string
      type: object
    AnalyticsRuleDefinition:
      example:
        public_key: AAAAAAAAAA==
        can_issue_confidentially: true
        is_admin: true
        can_issue_asset_id_first: 11
        can_issue_asset_id_last: 20
      properties:
        public_key:
          type: string
        can_issue_confidentially:
          type: boolean
        is_admin:
          type: boolean
        can_issue_asset_id_first:
          format: int32
          type: integer
        can_issue_asset_id_last:
          format: int32
          type: integer
      type: object
    AnalyticsRuleWalletDefinition:
      example:
        public_key: AAAAAAAAAA==
        can_issue_confidentially: true
        is_admin: true
        can_issue_asset_id_first: 11
        can_issue_asset_id_last: 20
        operation: CreateRule
      properties:
        public_key:
          type: string
        can_issue_confidentially:
          type: boolean
        is_admin:
          type: boolean
        can_issue_asset_id_first:
          format: int32
          type: integer
        can_issue_asset_id_last:
          format: int32
          type: integer
        operation:
          type: string
      type: object
    AnalyticsOutput:
      properties:
        is_confidential:
          type: boolean
        public_issuance_description:
          $ref: '#/components/schemas/AnalyticsPublicIssuanceDescription'
        confidential_issuance_description:
          $ref: '#/components/schemas/AnalyticsConfidentialIssuanceDescription'
        output_description:
          $ref: '#/components/schemas/AnalyticsOutputDescription'
      type: object
    AnalyticsPublicIssuanceDescription:
      example:
        asset_id: 10
        amount: 3
      nullable: true
      properties:
        asset_id:
          format: int32
          minimum: 1
          type: integer
        amount:
          format: int32
          minimum: 0
          type: integer
      required:
      - amount
      - asset_id
      type: object
    AnalyticsAssetConverterProofDescription:
      example:
        asset_cv: AAAAAAAAAAA=
        amount_cv: AAAAAAAAAAA=
        input_cv: AAAAAAAAAAA=
        zkproof: 000AAAAAAA=
      properties:
        input_cv:
          type: string
        amount_cv:
          type: string
        asset_cv:
          type: string
        zkproof:
          type: string
      type: object
    AnalyticsSpendDescription:
      example:
        cv: AAAAAAAAAAA=
        anchor: AAAAAAAAAAA=
        nullifier: AAAAAAAAAAA=
        zkproof: 000AAAAAAA=
        rk_out: AAAAAAAAAAA=
      properties:
        cv:
          type: string
        anchor:
          type: string
        nullifier:
          type: string
        rk_out:
          type: string
        zkproof:
          type: string
      type: object
    AnalyticsOutputDescription:
      example:
        cv: AAAAAAAAAAA=
        cm: 000AAAAAAA=
        epk: AAAAAAAAAAA=
        zkproof: 000AAAAAAA=
        enc_note: AAAAAAAAAAA=
        enc_sender: 000AAAAAAA=
      properties:
        cv:
          type: string
        cm:
          type: string
        epk:
          type: string
        zkproof:
          type: string
        enc_note:
          type: string
        enc_sender:
          type: string
      type: object
    AnalyticsConfidentialIssuanceDescription:
      example:
        input_cv: AAAAAAAAAAA=
        zkproof: 000AAAAAAA=
        rule:
        - min_id: 11
        - max_id: 20
      nullable: true
      properties:
        input_cv:
          type: string
        zkproof:
          type: string
        rule:
          $ref: '#/components/schemas/AnalyticsRule'
      type: object
    AnalyticsRule:
      example:
        min_id: 11
        max_id: 20
      properties:
        min_id:
          format: int32
          type: integer
        max_id:
          format: int32
          type: integer
      required:
      - max_id
      - min_id
      type: object
    GetWalletActivityResponse:
      example:
        wallet_id: wallet_id
        transactions:
        - metadata:
            tx_hash: tx_hash
            type: type
            timestamp: timestamp
          content: ""
        - metadata:
            tx_hash: tx_hash
            type: type
            timestamp: timestamp
          content: ""
      properties:
        wallet_id:
          type: string
        transactions:
          items:
            $ref: '#/components/schemas/AnalyticWalletTx'
          type: array
      type: object
    AnalyticWalletTx:
      example:
        metadata:
          tx_hash: tx_hash
          type: type
          timestamp: timestamp
        content: ""
      properties:
        metadata:
          $ref: '#/components/schemas/AnalyticWalletMetadata'
        content:
          oneOf:
          - $ref: '#/components/schemas/AnalyticIssueWalletTx'
          - $ref: '#/components/schemas/AnalyticTransferWalletTx'
          - $ref: '#/components/schemas/AnalyticRuleWalletTx'
      type: object
    AnalyticWalletMetadata:
      example:
        tx_hash: tx_hash
        type: type
        timestamp: timestamp
      properties:
        type:
          type: string
        tx_hash:
          type: string
        timestamp:
          type: string
      type: object
    AnalyticIssueWalletTx:
      properties:
        is_incoming:
          type: boolean
        issued_by_self:
          type: boolean
        sender_id:
          type: string
        memo:
          type: string
        recipient_address:
          type: string
        asset_id:
          format: int32
          type: integer
        amount:
          format: int32
          type: integer
        is_confidential:
          type: boolean
      type: object
    AnalyticTransferWalletTx:
      properties:
        is_incoming:
          type: boolean
        sender_id:
          type: string
        memo:
          type: string
        recipient_address:
          type: string
        asset_id:
          format: int32
          type: integer
        amount:
          format: int32
          type: integer
      type: object
    AnalyticRuleWalletTx:
      properties:
        signed_by_self:
          type: boolean
        rule_affect_self:
          type: boolean
        tx_signer:
          type: string
        rule:
          $ref: '#/components/schemas/AnalyticsRuleWalletDefinition'
      type: object
    HealthcheckResponse:
      example:
        version: 1.3.0
        blockchain_connector:
          error: 'Post http://localhost:8082/connector/get_block: dial tcp 127.0.0.1:8082:
            connect: connection refused'
          passing: false
        database:
          error: ""
          passing: true
        mq:
          error: ""
          passing: true
        passing: false
      properties:
        version:
          type: string
        blockchain_connector:
          $ref: '#/components/schemas/HealthcheckResponseItem'
        message_queue:
          $ref: '#/components/schemas/HealthcheckResponseItem'
        database:
          $ref: '#/components/schemas/HealthcheckResponseItem'
        passing:
          type: boolean
      type: object
    HealthcheckResponseItem:
      properties:
        passing:
          type: boolean
        error:
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: x-auth-token
      type: apiKey

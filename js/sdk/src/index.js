/**
 * QED-it - Asset Transfers
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AnalyticsAssetConverterProofDescription', 'model/AnalyticsConfidentialIssuanceDescription', 'model/AnalyticsIssueTx', 'model/AnalyticsOutput', 'model/AnalyticsOutputDescription', 'model/AnalyticsRule', 'model/AnalyticsRuleDefinition', 'model/AnalyticsRuleTx', 'model/AnalyticsSpendDescription', 'model/AnalyticsTransaction', 'model/AnalyticsTransferTx', 'model/AsyncTaskCreatedResponse', 'model/BalanceForAsset', 'model/CreateRuleRequest', 'model/DeleteRuleRequest', 'model/DeleteWalletRequest', 'model/ErrorResponse', 'model/ExportWalletRequest', 'model/ExportWalletResponse', 'model/GenerateWalletRequest', 'model/GetActivityRequest', 'model/GetActivityResponse', 'model/GetAllWalletsResponse', 'model/GetNetworkActivityRequest', 'model/GetNetworkActivityResponse', 'model/GetNewAddressRequest', 'model/GetNewAddressResponse', 'model/GetPublicKeyRequest', 'model/GetPublicKeyResponse', 'model/GetRulesResponse', 'model/GetTaskStatusRequest', 'model/GetTaskStatusResponse', 'model/GetWalletBalanceRequest', 'model/GetWalletBalanceResponse', 'model/ImportWalletRequest', 'model/IssueAssetRequest', 'model/Rule', 'model/TransactionsForWallet', 'model/TransferAssetRequest', 'model/UnlockWalletRequest', 'api/AnalyticsApi', 'api/NodeApi', 'api/WalletApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AnalyticsAssetConverterProofDescription'), require('./model/AnalyticsConfidentialIssuanceDescription'), require('./model/AnalyticsIssueTx'), require('./model/AnalyticsOutput'), require('./model/AnalyticsOutputDescription'), require('./model/AnalyticsRule'), require('./model/AnalyticsRuleDefinition'), require('./model/AnalyticsRuleTx'), require('./model/AnalyticsSpendDescription'), require('./model/AnalyticsTransaction'), require('./model/AnalyticsTransferTx'), require('./model/AsyncTaskCreatedResponse'), require('./model/BalanceForAsset'), require('./model/CreateRuleRequest'), require('./model/DeleteRuleRequest'), require('./model/DeleteWalletRequest'), require('./model/ErrorResponse'), require('./model/ExportWalletRequest'), require('./model/ExportWalletResponse'), require('./model/GenerateWalletRequest'), require('./model/GetActivityRequest'), require('./model/GetActivityResponse'), require('./model/GetAllWalletsResponse'), require('./model/GetNetworkActivityRequest'), require('./model/GetNetworkActivityResponse'), require('./model/GetNewAddressRequest'), require('./model/GetNewAddressResponse'), require('./model/GetPublicKeyRequest'), require('./model/GetPublicKeyResponse'), require('./model/GetRulesResponse'), require('./model/GetTaskStatusRequest'), require('./model/GetTaskStatusResponse'), require('./model/GetWalletBalanceRequest'), require('./model/GetWalletBalanceResponse'), require('./model/ImportWalletRequest'), require('./model/IssueAssetRequest'), require('./model/Rule'), require('./model/TransactionsForWallet'), require('./model/TransferAssetRequest'), require('./model/UnlockWalletRequest'), require('./api/AnalyticsApi'), require('./api/NodeApi'), require('./api/WalletApi'));
  }
}(function(ApiClient, AnalyticsAssetConverterProofDescription, AnalyticsConfidentialIssuanceDescription, AnalyticsIssueTx, AnalyticsOutput, AnalyticsOutputDescription, AnalyticsRule, AnalyticsRuleDefinition, AnalyticsRuleTx, AnalyticsSpendDescription, AnalyticsTransaction, AnalyticsTransferTx, AsyncTaskCreatedResponse, BalanceForAsset, CreateRuleRequest, DeleteRuleRequest, DeleteWalletRequest, ErrorResponse, ExportWalletRequest, ExportWalletResponse, GenerateWalletRequest, GetActivityRequest, GetActivityResponse, GetAllWalletsResponse, GetNetworkActivityRequest, GetNetworkActivityResponse, GetNewAddressRequest, GetNewAddressResponse, GetPublicKeyRequest, GetPublicKeyResponse, GetRulesResponse, GetTaskStatusRequest, GetTaskStatusResponse, GetWalletBalanceRequest, GetWalletBalanceResponse, ImportWalletRequest, IssueAssetRequest, Rule, TransactionsForWallet, TransferAssetRequest, UnlockWalletRequest, AnalyticsApi, NodeApi, WalletApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var QedItAssetTransfers = require('index'); // See note below*.
   * var xxxSvc = new QedItAssetTransfers.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new QedItAssetTransfers.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new QedItAssetTransfers.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new QedItAssetTransfers.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.2.2
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AnalyticsAssetConverterProofDescription model constructor.
     * @property {module:model/AnalyticsAssetConverterProofDescription}
     */
    AnalyticsAssetConverterProofDescription: AnalyticsAssetConverterProofDescription,
    /**
     * The AnalyticsConfidentialIssuanceDescription model constructor.
     * @property {module:model/AnalyticsConfidentialIssuanceDescription}
     */
    AnalyticsConfidentialIssuanceDescription: AnalyticsConfidentialIssuanceDescription,
    /**
     * The AnalyticsIssueTx model constructor.
     * @property {module:model/AnalyticsIssueTx}
     */
    AnalyticsIssueTx: AnalyticsIssueTx,
    /**
     * The AnalyticsOutput model constructor.
     * @property {module:model/AnalyticsOutput}
     */
    AnalyticsOutput: AnalyticsOutput,
    /**
     * The AnalyticsOutputDescription model constructor.
     * @property {module:model/AnalyticsOutputDescription}
     */
    AnalyticsOutputDescription: AnalyticsOutputDescription,
    /**
     * The AnalyticsRule model constructor.
     * @property {module:model/AnalyticsRule}
     */
    AnalyticsRule: AnalyticsRule,
    /**
     * The AnalyticsRuleDefinition model constructor.
     * @property {module:model/AnalyticsRuleDefinition}
     */
    AnalyticsRuleDefinition: AnalyticsRuleDefinition,
    /**
     * The AnalyticsRuleTx model constructor.
     * @property {module:model/AnalyticsRuleTx}
     */
    AnalyticsRuleTx: AnalyticsRuleTx,
    /**
     * The AnalyticsSpendDescription model constructor.
     * @property {module:model/AnalyticsSpendDescription}
     */
    AnalyticsSpendDescription: AnalyticsSpendDescription,
    /**
     * The AnalyticsTransaction model constructor.
     * @property {module:model/AnalyticsTransaction}
     */
    AnalyticsTransaction: AnalyticsTransaction,
    /**
     * The AnalyticsTransferTx model constructor.
     * @property {module:model/AnalyticsTransferTx}
     */
    AnalyticsTransferTx: AnalyticsTransferTx,
    /**
     * The AsyncTaskCreatedResponse model constructor.
     * @property {module:model/AsyncTaskCreatedResponse}
     */
    AsyncTaskCreatedResponse: AsyncTaskCreatedResponse,
    /**
     * The BalanceForAsset model constructor.
     * @property {module:model/BalanceForAsset}
     */
    BalanceForAsset: BalanceForAsset,
    /**
     * The CreateRuleRequest model constructor.
     * @property {module:model/CreateRuleRequest}
     */
    CreateRuleRequest: CreateRuleRequest,
    /**
     * The DeleteRuleRequest model constructor.
     * @property {module:model/DeleteRuleRequest}
     */
    DeleteRuleRequest: DeleteRuleRequest,
    /**
     * The DeleteWalletRequest model constructor.
     * @property {module:model/DeleteWalletRequest}
     */
    DeleteWalletRequest: DeleteWalletRequest,
    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The ExportWalletRequest model constructor.
     * @property {module:model/ExportWalletRequest}
     */
    ExportWalletRequest: ExportWalletRequest,
    /**
     * The ExportWalletResponse model constructor.
     * @property {module:model/ExportWalletResponse}
     */
    ExportWalletResponse: ExportWalletResponse,
    /**
     * The GenerateWalletRequest model constructor.
     * @property {module:model/GenerateWalletRequest}
     */
    GenerateWalletRequest: GenerateWalletRequest,
    /**
     * The GetActivityRequest model constructor.
     * @property {module:model/GetActivityRequest}
     */
    GetActivityRequest: GetActivityRequest,
    /**
     * The GetActivityResponse model constructor.
     * @property {module:model/GetActivityResponse}
     */
    GetActivityResponse: GetActivityResponse,
    /**
     * The GetAllWalletsResponse model constructor.
     * @property {module:model/GetAllWalletsResponse}
     */
    GetAllWalletsResponse: GetAllWalletsResponse,
    /**
     * The GetNetworkActivityRequest model constructor.
     * @property {module:model/GetNetworkActivityRequest}
     */
    GetNetworkActivityRequest: GetNetworkActivityRequest,
    /**
     * The GetNetworkActivityResponse model constructor.
     * @property {module:model/GetNetworkActivityResponse}
     */
    GetNetworkActivityResponse: GetNetworkActivityResponse,
    /**
     * The GetNewAddressRequest model constructor.
     * @property {module:model/GetNewAddressRequest}
     */
    GetNewAddressRequest: GetNewAddressRequest,
    /**
     * The GetNewAddressResponse model constructor.
     * @property {module:model/GetNewAddressResponse}
     */
    GetNewAddressResponse: GetNewAddressResponse,
    /**
     * The GetPublicKeyRequest model constructor.
     * @property {module:model/GetPublicKeyRequest}
     */
    GetPublicKeyRequest: GetPublicKeyRequest,
    /**
     * The GetPublicKeyResponse model constructor.
     * @property {module:model/GetPublicKeyResponse}
     */
    GetPublicKeyResponse: GetPublicKeyResponse,
    /**
     * The GetRulesResponse model constructor.
     * @property {module:model/GetRulesResponse}
     */
    GetRulesResponse: GetRulesResponse,
    /**
     * The GetTaskStatusRequest model constructor.
     * @property {module:model/GetTaskStatusRequest}
     */
    GetTaskStatusRequest: GetTaskStatusRequest,
    /**
     * The GetTaskStatusResponse model constructor.
     * @property {module:model/GetTaskStatusResponse}
     */
    GetTaskStatusResponse: GetTaskStatusResponse,
    /**
     * The GetWalletBalanceRequest model constructor.
     * @property {module:model/GetWalletBalanceRequest}
     */
    GetWalletBalanceRequest: GetWalletBalanceRequest,
    /**
     * The GetWalletBalanceResponse model constructor.
     * @property {module:model/GetWalletBalanceResponse}
     */
    GetWalletBalanceResponse: GetWalletBalanceResponse,
    /**
     * The ImportWalletRequest model constructor.
     * @property {module:model/ImportWalletRequest}
     */
    ImportWalletRequest: ImportWalletRequest,
    /**
     * The IssueAssetRequest model constructor.
     * @property {module:model/IssueAssetRequest}
     */
    IssueAssetRequest: IssueAssetRequest,
    /**
     * The Rule model constructor.
     * @property {module:model/Rule}
     */
    Rule: Rule,
    /**
     * The TransactionsForWallet model constructor.
     * @property {module:model/TransactionsForWallet}
     */
    TransactionsForWallet: TransactionsForWallet,
    /**
     * The TransferAssetRequest model constructor.
     * @property {module:model/TransferAssetRequest}
     */
    TransferAssetRequest: TransferAssetRequest,
    /**
     * The UnlockWalletRequest model constructor.
     * @property {module:model/UnlockWalletRequest}
     */
    UnlockWalletRequest: UnlockWalletRequest,
    /**
     * The AnalyticsApi service constructor.
     * @property {module:api/AnalyticsApi}
     */
    AnalyticsApi: AnalyticsApi,
    /**
     * The NodeApi service constructor.
     * @property {module:api/NodeApi}
     */
    NodeApi: NodeApi,
    /**
     * The WalletApi service constructor.
     * @property {module:api/WalletApi}
     */
    WalletApi: WalletApi
  };

  return exports;
}));

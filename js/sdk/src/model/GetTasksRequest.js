/**
 * QEDIT - Asset Transfers
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Result', 'model/TaskType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Result'), require('./TaskType'));
  } else {
    // Browser globals (root is window)
    if (!root.QedItAssetTransfers) {
      root.QedItAssetTransfers = {};
    }
    root.QedItAssetTransfers.GetTasksRequest = factory(root.QedItAssetTransfers.ApiClient, root.QedItAssetTransfers.Result, root.QedItAssetTransfers.TaskType);
  }
}(this, function(ApiClient, Result, TaskType) {
  'use strict';



  /**
   * The GetTasksRequest model module.
   * @module model/GetTasksRequest
   * @version 1.6.0
   */

  /**
   * Constructs a new <code>GetTasksRequest</code>.
   * @alias module:model/GetTasksRequest
   * @class
   * @param startIndex {Number} An offset used to paginate through the Task list; indexing is 0-based
   * @param numberOfResults {Number} Maximal number of results to fetch in this call
   */
  var exports = function(startIndex, numberOfResults) {
    var _this = this;

    _this['start_index'] = startIndex;
    _this['number_of_results'] = numberOfResults;
  };

  /**
   * Constructs a <code>GetTasksRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetTasksRequest} obj Optional instance to populate.
   * @return {module:model/GetTasksRequest} The populated <code>GetTasksRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('start_index')) {
        obj['start_index'] = ApiClient.convertToType(data['start_index'], 'Number');
      }
      if (data.hasOwnProperty('number_of_results')) {
        obj['number_of_results'] = ApiClient.convertToType(data['number_of_results'], 'Number');
      }
      if (data.hasOwnProperty('types')) {
        obj['types'] = ApiClient.convertToType(data['types'], [TaskType]);
      }
      if (data.hasOwnProperty('results')) {
        obj['results'] = ApiClient.convertToType(data['results'], [Result]);
      }
      if (data.hasOwnProperty('order')) {
        obj['order'] = ApiClient.convertToType(data['order'], 'String');
      }
    }
    return obj;
  }

  /**
   * An offset used to paginate through the Task list; indexing is 0-based
   * @member {Number} start_index
   */
  exports.prototype['start_index'] = undefined;
  /**
   * Maximal number of results to fetch in this call
   * @member {Number} number_of_results
   */
  exports.prototype['number_of_results'] = undefined;
  /**
   * Types of Tasks to fetch; fetch all types if omitted
   * @member {Array.<module:model/TaskType>} types
   */
  exports.prototype['types'] = undefined;
  /**
   * List of results (statuses) to filter by; fetch in_progress tasks if omitted
   * @member {Array.<module:model/Result>} results
   */
  exports.prototype['results'] = undefined;
  /**
   * Order of tasks to fetch (either ascending or descending); ordering is chronological where the time is set to when the task was created in this Node
   * @member {module:model/GetTasksRequest.OrderEnum} order
   * @default 'desc'
   */
  exports.prototype['order'] = 'desc';


  /**
   * Allowed values for the <code>order</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OrderEnum = {
    /**
     * value: "asc"
     * @const
     */
    "asc": "asc",
    /**
     * value: "desc"
     * @const
     */
    "desc": "desc"  };


  return exports;
}));



/**
 * QEDIT - Asset Transfers
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Result', 'model/TaskData', 'model/TaskState', 'model/TaskType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Result'), require('./TaskData'), require('./TaskState'), require('./TaskType'));
  } else {
    // Browser globals (root is window)
    if (!root.QedItAssetTransfers) {
      root.QedItAssetTransfers = {};
    }
    root.QedItAssetTransfers.GetTaskStatusResponse = factory(root.QedItAssetTransfers.ApiClient, root.QedItAssetTransfers.Result, root.QedItAssetTransfers.TaskData, root.QedItAssetTransfers.TaskState, root.QedItAssetTransfers.TaskType);
  }
}(this, function(ApiClient, Result, TaskData, TaskState, TaskType) {
  'use strict';



  /**
   * The GetTaskStatusResponse model module.
   * @module model/GetTaskStatusResponse
   * @version 1.6.0
   */

  /**
   * Constructs a new <code>GetTaskStatusResponse</code>.
   * @alias module:model/GetTaskStatusResponse
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>GetTaskStatusResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetTaskStatusResponse} obj Optional instance to populate.
   * @return {module:model/GetTaskStatusResponse} The populated <code>GetTaskStatusResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
      }
      if (data.hasOwnProperty('updated_at')) {
        obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
      }
      if (data.hasOwnProperty('result')) {
        obj['result'] = Result.constructFromObject(data['result']);
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = TaskState.constructFromObject(data['state']);
      }
      if (data.hasOwnProperty('tx_hash')) {
        obj['tx_hash'] = ApiClient.convertToType(data['tx_hash'], 'String');
      }
      if (data.hasOwnProperty('qedit_tx_hash')) {
        obj['qedit_tx_hash'] = ApiClient.convertToType(data['qedit_tx_hash'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = TaskType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('data')) {
        obj['data'] = TaskData.constructFromObject(data['data']);
      }
      if (data.hasOwnProperty('error')) {
        obj['error'] = ApiClient.convertToType(data['error'], 'String');
      }
    }
    return obj;
  }

  /**
   * Unique ID of the Task
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * UTC time of creation of the Task in RFC-3339 format
   * @member {Date} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * UTC last time the Task was updated in RFC-3339 format
   * @member {Date} updated_at
   */
  exports.prototype['updated_at'] = undefined;
  /**
   * @member {module:model/Result} result
   */
  exports.prototype['result'] = undefined;
  /**
   * @member {module:model/TaskState} state
   */
  exports.prototype['state'] = undefined;
  /**
   * The Blockchain-generated hash of the Transaction; populated after the Blockchain Node accepted the Transaction
   * @member {String} tx_hash
   */
  exports.prototype['tx_hash'] = undefined;
  /**
   * The QEDIT-generated hash of the Transaction; generated after proof generation, but prior to Broadcast by the QEDIT Node
   * @member {String} qedit_tx_hash
   */
  exports.prototype['qedit_tx_hash'] = undefined;
  /**
   * @member {module:model/TaskType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/TaskData} data
   */
  exports.prototype['data'] = undefined;
  /**
   * In case of failure this field reports the reason for the failure
   * @member {String} error
   */
  exports.prototype['error'] = undefined;



  return exports;
}));



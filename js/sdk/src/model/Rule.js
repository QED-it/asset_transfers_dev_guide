/**
 * QEDIT - Asset Transfers
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.QedItAssetTransfers) {
      root.QedItAssetTransfers = {};
    }
    root.QedItAssetTransfers.Rule = factory(root.QedItAssetTransfers.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The Rule model module.
   * @module model/Rule
   * @version 1.5.0
   */

  /**
   * Constructs a new <code>Rule</code>.
   * @alias module:model/Rule
   * @class
   * @param publicKey {String} The public key of the Wallet that is being granted rights in this Rule
   * @param isAdmin {Boolean} Boolean signifying whether the Rule grants admin rights
   * @param canIssueAssetIdFirst {Number} The lower Asset ID in the range of IDs the Rule grants issuance rights for (range is inclusive)
   * @param canIssueAssetIdLast {Number} The upper Asset ID in the range of IDs the Rule grants issuance rights for (range is inclusive)
   * @param canIssueConfidentially {Boolean} Boolean signifying whether the Rule grants confidentialy issuance rights; if true, then both public and confidential issuance right are granted; if false, then only public issuance rights are granted
   */
  var exports = function(publicKey, isAdmin, canIssueAssetIdFirst, canIssueAssetIdLast, canIssueConfidentially) {
    var _this = this;

    _this['public_key'] = publicKey;
    _this['is_admin'] = isAdmin;
    _this['can_issue_asset_id_first'] = canIssueAssetIdFirst;
    _this['can_issue_asset_id_last'] = canIssueAssetIdLast;
    _this['can_issue_confidentially'] = canIssueConfidentially;
  };

  /**
   * Constructs a <code>Rule</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Rule} obj Optional instance to populate.
   * @return {module:model/Rule} The populated <code>Rule</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('public_key')) {
        obj['public_key'] = ApiClient.convertToType(data['public_key'], 'String');
      }
      if (data.hasOwnProperty('is_admin')) {
        obj['is_admin'] = ApiClient.convertToType(data['is_admin'], 'Boolean');
      }
      if (data.hasOwnProperty('can_issue_asset_id_first')) {
        obj['can_issue_asset_id_first'] = ApiClient.convertToType(data['can_issue_asset_id_first'], 'Number');
      }
      if (data.hasOwnProperty('can_issue_asset_id_last')) {
        obj['can_issue_asset_id_last'] = ApiClient.convertToType(data['can_issue_asset_id_last'], 'Number');
      }
      if (data.hasOwnProperty('can_issue_confidentially')) {
        obj['can_issue_confidentially'] = ApiClient.convertToType(data['can_issue_confidentially'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * The public key of the Wallet that is being granted rights in this Rule
   * @member {String} public_key
   */
  exports.prototype['public_key'] = undefined;
  /**
   * Boolean signifying whether the Rule grants admin rights
   * @member {Boolean} is_admin
   */
  exports.prototype['is_admin'] = undefined;
  /**
   * The lower Asset ID in the range of IDs the Rule grants issuance rights for (range is inclusive)
   * @member {Number} can_issue_asset_id_first
   */
  exports.prototype['can_issue_asset_id_first'] = undefined;
  /**
   * The upper Asset ID in the range of IDs the Rule grants issuance rights for (range is inclusive)
   * @member {Number} can_issue_asset_id_last
   */
  exports.prototype['can_issue_asset_id_last'] = undefined;
  /**
   * Boolean signifying whether the Rule grants confidentialy issuance rights; if true, then both public and confidential issuance right are granted; if false, then only public issuance rights are granted
   * @member {Boolean} can_issue_confidentially
   */
  exports.prototype['can_issue_confidentially'] = undefined;



  return exports;
}));



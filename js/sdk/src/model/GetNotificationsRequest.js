/**
 * QEDIT - Asset Transfers
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.6.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NotificationType', 'model/OrderEnum'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NotificationType'), require('./OrderEnum'));
  } else {
    // Browser globals (root is window)
    if (!root.QeditAssetTransfers) {
      root.QeditAssetTransfers = {};
    }
    root.QeditAssetTransfers.GetNotificationsRequest = factory(root.QeditAssetTransfers.ApiClient, root.QeditAssetTransfers.NotificationType, root.QeditAssetTransfers.OrderEnum);
  }
}(this, function(ApiClient, NotificationType, OrderEnum) {
  'use strict';



  /**
   * The GetNotificationsRequest model module.
   * @module model/GetNotificationsRequest
   * @version 1.6.1
   */

  /**
   * Constructs a new <code>GetNotificationsRequest</code>.
   * The request body determines which filters to apply to the notifications. All filters are optional, while the maximal number of results defaults to 100 and the order defaults to descending.
   * @alias module:model/GetNotificationsRequest
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>GetNotificationsRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetNotificationsRequest} obj Optional instance to populate.
   * @return {module:model/GetNotificationsRequest} The populated <code>GetNotificationsRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('wallet_id')) {
        obj['wallet_id'] = ApiClient.convertToType(data['wallet_id'], 'String');
      }
      if (data.hasOwnProperty('types')) {
        obj['types'] = ApiClient.convertToType(data['types'], [NotificationType]);
      }
      if (data.hasOwnProperty('starting_with_time')) {
        obj['starting_with_time'] = ApiClient.convertToType(data['starting_with_time'], 'Date');
      }
      if (data.hasOwnProperty('after_id')) {
        obj['after_id'] = ApiClient.convertToType(data['after_id'], 'Number');
      }
      if (data.hasOwnProperty('order')) {
        obj['order'] = OrderEnum.constructFromObject(data['order']);
      }
      if (data.hasOwnProperty('max_results')) {
        obj['max_results'] = ApiClient.convertToType(data['max_results'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Fetch notifications that relate to this wallet ID only
   * @member {String} wallet_id
   */
  exports.prototype['wallet_id'] = undefined;
  /**
   * @member {Array.<module:model/NotificationType>} types
   */
  exports.prototype['types'] = undefined;
  /**
   * Fetch notifications reported at this timestamp or later/earlier. Later notifications will be fetched if the order is ascending, and earlier ones if the order is descending. The timestamp is expected to be in RFC-3339 format.
   * @member {Date} starting_with_time
   */
  exports.prototype['starting_with_time'] = undefined;
  /**
   * Fetch notifications after this given ID (not including the notification with the given ID). This is meant to facilitate pagination. Later notifications will be fetched if ascending order is selected, and earlier ones if descending order is selected. Warning - do not assume anything about the implementation of after_id; the values of the ID are intended to be copy-pasted from retrieved notifications for pagination.
   * @member {Number} after_id
   */
  exports.prototype['after_id'] = undefined;
  /**
   * @member {module:model/OrderEnum} order
   */
  exports.prototype['order'] = undefined;
  /**
   * The maximal number of results to fetch
   * @member {Number} max_results
   * @default 100
   */
  exports.prototype['max_results'] = 100;



  return exports;
}));


